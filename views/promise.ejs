<%- include('parts/html_head') %> 
<%- include('parts/html_navbar') %> 


<%- include('parts/html_script') %>
<script>
  $(function(){
  
  let TryPromise = ()=>{                    //建立一個函式 包裝Promise
  return new Promise((resolve,reject) =>{
      let x = parseInt(Math.random() * 2); //隨機成功或失敗 
      if(x){
        setTimeout(function(){
           resolve('Promise成功 '+Math.random());   //如果成功 將會把resolve
       },100+Math.random()*1000) 
      }
      else{
          reject('Promise失敗！'+Math.random());
      }
       
    });
   }

   TryPromise().then(data=>{
       console.log('data: ', data);
   }).catch(e=>{
       console.log('e:',e);
   })
   
   console.log('我要跑自己的') //因為上面promise非同步的關係，所以他不會等待promise做完才執行，而是各自執行各自的。
  });
</script>
<%- include('parts/html_foot') %>  
